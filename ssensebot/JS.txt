<!doctype html>
<html>
 <head>
   
  <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate">
  <meta http-equiv="Pragma" content="no-cache">
  <meta http-equiv="Expires" content="0">
    <title>CC Map Frame V3</title>

		  <script src="/WBSStatic/site60/proxy/js/jquery-1.11.2.min.js" type="text/javascript" charset="utf-8"></script>
	  <script src="/WBSStatic/site60/proxy/js/jquery.ba-postmessage.2.0.0.min.js" type="text/javascript" charset="utf-8"></script>
	
    
  <script type="text/javascript" src="/WBSStatic/site60/proxy/js/jsencrypt.min.js"></script>
  <script>
    var ccFieldNameInit = "ccNum";
    var cvvFieldNameInit = "ccCVV";
    var ccFieldNameAlt1 = "cardNumber";
    var cvvFieldNameAlt1 = "cardCsc";
    
    var ccFieldName = ccFieldNameInit;
    var cvvFieldName = cvvFieldNameInit;
    
    var enableClientEnc = true;
    var encKeyName = "hpciwire0AOHRFEPJ4RA5HO";
    var encKeyPublic = "MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA7Mnq9aBSQeb2kCDulbKLbpX1AtCYQSR0vwaejPwDCwIg+06dYl/rszQ4uzPPD86U4wtgYIdr62ej/hcECsphIZGRDp3+P5+rQRGfQFt+yQT7LYw3tVoB8xxDT0o8YTJEvnq6VViDHcmP9rXQ6FT5ipAXeq664Hy43Tr4zflbgCyKtH76rCge+kFX02voMwagZbXDRrNO9AsCgk7Oa8cN6oCs4LonN/CjRDpJ47Q1Sf7ASPiEaEnKVkakzM+eyin9p/4mEIwN8frTE2yp9QOmjHtV6xupg7dqPDIPbESB4lRZZhzyGCy+YnjWz3L1tSiJYTrSnx7uxy4vHGkB1b2WYyJU7W+TQ2noDr7Qye87ia1sW9ApDvoBb3V62BzVmWLTmb0whndB8NO4//yvT1ANyEEIMHR4bHjVk0yMWyzr61G7lSnqc5H5MKnbVxgyDmxsb8NRJO59cqyBtq1HoqIDdKrVKNmJjMg/ro+i5Ua2QpyjaB/TDpyqfzY4zLlpE4ELH4NGh+6czaVKXJSAPUB0jyVt2tLcpwPLTccVHtOyKSehIOGuCXUkyN6/Bs6F7eePm+nrRQQBqWRlnjrA7hdq2eWLKfh9vOqM1hTPBYZFo+mNEI5thi5sJcfSXv9tzdIleOlCZDABNknkRD/SO1z40JDjx3senHVB4U+XHbkyP2sCAwEAAQ==";
    var randomPrefix = "nUVOyMMU";
    var randomSuffix = "VkpOpZxi";
  </script>
  <script src="https://tlschk1.hostedpci.com/WBSStatic/site60/proxy/js/hpci-tlschk-1.0.js" type="text/javascript" charset="utf-8"></script>
  <script>
        var encryptService = new JSEncrypt();
	if (enableClientEnc && encKeyPublic != "") {
	        encryptService.setPublicKey(encKeyPublic);
	}
  </script>
  
      
    
    
      <script>

	$.hpciUrlParam = function(name, queryStr){
		var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(queryStr);
		if (!results) { return 0; }
		return results[1] || 0;
	}

	$.hpciUrlParamStr = function(name, queryStr){
		var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(queryStr);
		if (!results) { return ""; }
		return results[1] || "";
	}

	$.hpciCleanCC = function(inCCNumValue){
		var outCleanCC = "";
		if (inCCNumValue != "") {
			for (var idx = 0; idx < inCCNumValue.length; idx++) {
				if (inCCNumValue[idx] >= '0' && inCCNumValue[idx] <= '9') {
					outCleanCC = outCleanCC.concat(inCCNumValue[idx]);
				}
			}
		}
		return outCleanCC;
	}

	$.hpciCheckInvalidCC = function(inCleanCC){
		var outInvalidCC = "N";
		if (inCleanCC != "") {
			for (var idx = 0; idx < inCleanCC.length; idx++) {
				if (inCleanCC[idx] >= '0' && inCleanCC[idx] <= '9') {
					// numbers are ok
				}
				else if (inCleanCC[idx] != ' ' && inCleanCC[idx] != '-') {
					outInvalidCC = "Y"
				}
			}
		}
		return outInvalidCC;
	}

	$.hpciPrepareCCLength = function(inCleanCC, inInvalidCC){
		var outCCLength = 0;
		if (inInvalidCC != "Y") {
			outCCLength = inCleanCC.length;
		}
		return outCCLength;
	}
	
	$.hpciPrepareEnteredCCLength = function(inCCNumValue){
		var outCCEnterLength = 0;
		if (inCCNumValue != "") {
			outCCEnterLength = inCCNumValue.length;
		}
		return outCCEnterLength;
	}
	
	$.hpciFormatCCDigits = function(inCleanCC, inCCType, delimiter) {
		var outFormatCCDigits = "";
		if (inCCType == "amex") {
			for(var i=0; i < inCleanCC.length; i++) {
		        if((i == 4 || i == 10) || (i > 14 && i%4 == 3)) {
		        	outFormatCCDigits = outFormatCCDigits.concat(delimiter);
		        }
		        outFormatCCDigits = outFormatCCDigits.concat(inCleanCC[i]);
	    	}
		}
		else {
			for(var i=0; i < inCleanCC.length; i++) {
		        if(i > 3 && i%4 == 0) {
		        	outFormatCCDigits = outFormatCCDigits.concat(delimiter);
		        }
		        outFormatCCDigits = outFormatCCDigits.concat(inCleanCC[i]);
			}
		}
		return outFormatCCDigits;
	}
	
	$.hpciPrepareCCType = function(inCleanCC, inInvalidCC, inCCLength) {
		var outCCType = "na";
		if (inInvalidCC != "Y" && inCleanCC.length >= 4) {
			var ccChar1 = inCleanCC.substring(0, 1);
			var ccChar2 = inCleanCC.substring(0, 2);
			var ccChar3 = inCleanCC.substring(0, 3);
			var ccChar4 = inCleanCC.substring(0, 4);
			if (ccChar1 == "4") {
				outCCType = "visa";
			}
			else if (ccChar2 == "51" || ccChar2 == "52" || ccChar2 == "53" || ccChar2 == "54" || ccChar2 == "55") {
				outCCType = "mastercard";
			}
			else if (ccChar3 == "222" || ccChar3 == "223" || ccChar3 == "224" || ccChar3 == "225" || ccChar3 == "226" || ccChar3 == "227" || ccChar3 == "228" || ccChar3 == "229" || ccChar2 == "23" || ccChar2 == "24" || ccChar2 == "25" || ccChar2 == "26" || ccChar3 == "270" || ccChar3 == "271" || ccChar4 == "2720") {
				outCCType = "mastercard";
			}			
			else if (ccChar4 == "6011" || ccChar3 == "622" || ccChar3 == "644" || ccChar3 == "645" || ccChar3 == "646" || ccChar3 == "647" || ccChar3 == "648" || ccChar3 == "649" || ccChar2 == "65") {
				outCCType = "discover";
			}
			else if (ccChar4 == "3528" || ccChar4 == "3529" || ccChar3 == "353" || ccChar3 == "354" || ccChar3 == "355" || ccChar3 == "356" || ccChar3 == "357" || ccChar3 == "358") {
				outCCType = "jcb";
			}
			else if (ccChar2 == "34" || ccChar2 == "37") {
				outCCType = "amex";
			}
			else if (ccChar4 == "3095" || ccChar3 == "300" || ccChar3 == "301" || ccChar3 == "302" || ccChar3 == "303" || ccChar3 == "304" || ccChar3 == "305" || ccChar2 == "38" || ccChar2 == "39" || ccChar2 == "36") {
				outCCType = "diners";
			}
			else {
				outCCType = "unknown";
			}
					}
		
		if (inCCLength == 0) {
			outCCType = "na";
		}

		return outCCType;
	}
	
	$.hpciPrepareCCBIN = function(inCleanCC, inInvalidCC) {
		var outCCBIN = "";
		if (inInvalidCC != "Y" && inCleanCC.length >= 6) {
			outCCBIN = inCleanCC.substring(0, 6);
		}
		return outCCBIN;
	}
	
	$.hpciCheckCCValid = function(inCleanCC, inInvalidCC) {
		var outCCValid = "N";
		if (inInvalidCC != "Y" && inCleanCC.length >= 12 && inCleanCC.length <= 19) {
			var sum = 0;
	
			var alternate = false;
			for (var i = inCleanCC.length - 1; i >= 0; i--) {
				var curNum = parseInt(inCleanCC[i]);
				if (alternate) {
					curNum = curNum * 2;
					if (curNum > 9) {
						curNum = (curNum % 10) + 1;
					}
				}
				sum += curNum;
				alternate = !alternate;
			}
			
			// check mod
			var modCheck = sum % 10;
			if (modCheck == 0) {
				outCCValid = "Y";
			}
		}
		return outCCValid;
	}

	$.hpciCleanCVV = function(inCVVNumValue){
		var outCleanCVV = "";
		if (inCVVNumValue != "") {
			for (var idx = 0; idx < inCVVNumValue.length; idx++) {
				if (inCVVNumValue[idx] >= '0' && inCVVNumValue[idx] <= '9') {
					outCleanCVV = outCleanCVV.concat(inCVVNumValue[idx]);
				}
			}
		}
		return outCleanCVV;
	}

	$.hpciCheckInvalidCVV = function(inCVVNumValue){
		var outInvalidCVV = "N";
		if (inCVVNumValue != "") {
			for (var idx = 0; idx < inCVVNumValue.length; idx++) {
				if (inCVVNumValue[idx] >= '0' && inCVVNumValue[idx] <= '9') {
					// numbers are ok
				}
				else if (inCVVNumValue[idx] != ' ') {
					outInvalidCVV = "Y"
				}
			}
		}
		return outInvalidCVV;
	}
	
	$.hpciPrepareCVVLength = function(inCleanCVV, inInvalidCVV){
		var outCVVLength = 0;
		if (inInvalidCVV != "Y") {
			outCVVLength = inCleanCVV.length;
		}
		return outCVVLength;
	}
	
	$.hpciCheckCVVValid = function(inInvalidCVV, inCVVLength, inCCType){
		var outCVVValid = "N";
		if (inInvalidCVV != "Y" && inCVVLength > 0 && inCVVLength <= 4) {
			if (inCCType == "amex") {
				if (inCVVLength == 4) {
					outCVVValid = "Y";
				}
			}
			else if ((inCCType == "na" || inCCType == "unknown" || inCCType == "") && inCVVLength >= 3 && inCVVLength <= 4) {
				outCVVValid = "Y";
			}
			else if (inCVVLength == 3) {
				outCVVValid = "Y";
			}
		}
		return outCVVValid;
	}
	
	var captchaIdValue = "1483778";
	var captchaRespValue = "649237";
	var postMsgUrl = "https://www.ssense.com";
	var frameFocus = "";

	$.receiveMessage(
	  function(e){
	  
	  	 	  	 
	  	 // get the return prepared parent url
	  	 var fullData = "" + e.data;
	  	 var receivedParamData = "";
	  	 var preparedPostMsgUrl = postMsgUrl;
	  	 
		 // anchors to locate
	 	 var tokenSplit = "mapcc-url=";
		
		 // find the anchors
		 var tokenIdx = fullData.indexOf(tokenSplit);
		 if (tokenIdx >= 0 && tokenIdx + tokenSplit.length < fullData.length) {
			preparedPostMsgUrl = fullData.substr(tokenIdx + tokenSplit.length);
		  			  	 
	  	 	receivedParamData = fullData.substr(0, tokenIdx);
		 }
		 else {
		 	preparedPostMsgUrl = postMsgUrl;
		  			  	 
	  	 	receivedParamData = fullData;
		 }
		 
	     // find command
	     var msgCmd = $.hpciUrlParam('msgCmd', "?" + receivedParamData);
	  	 if (msgCmd == "changestyle") {
	  	 	var elementId = $.hpciUrlParamStr('elementId', "?" + receivedParamData);
	  	 	var propName = $.hpciUrlParamStr('propName', "?" + receivedParamData);
	  	 	var propValue = $.hpciUrlParamStr('propValue', "?" + receivedParamData);
	  	 	
	  	 	// decode any parameters
	 	 	propName = decodeURIComponent(propName);
		  	propValue = decodeURIComponent(propValue);
		  	
	  	 	if (elementId == ccFieldNameInit) { elementId = ccFieldName }
	  	 	if (elementId == cvvFieldNameInit) { elementId = cvvFieldName }
	  	 	
	  	 		  	 		  	 	
	  	 	$("#" + elementId).css(propName, propValue);
	  	 }
	  	 else if (msgCmd == "changeclass") {
	  	 	var elementId = $.hpciUrlParamStr('elementId', "?" + receivedParamData);
	  	 	var classValue = $.hpciUrlParamStr('classValue', "?" + receivedParamData);
	  	 	
	  	 	// decode any parameters
		  	classValue = decodeURIComponent(classValue);
	  	 	
	  	 	if (elementId == ccFieldNameInit) { elementId = ccFieldName }
	  	 	if (elementId == cvvFieldNameInit) { elementId = cvvFieldName }
	  	 	
	  	 		  	 		  	 	
	  	 	$("#" + elementId).attr( "class", classValue );
	  	 }
	  	 else {
		     var ccNumInput = document.getElementById(ccFieldName);
		     var ccCVVInput = document.getElementById(cvvFieldName);
		     
		     // load the param data
		     var expMonth = $.hpciUrlParamStr('expMonth', "?" + receivedParamData);
		     var expYear = $.hpciUrlParamStr('expYear', "?" + receivedParamData);
		     var firstName = $.hpciUrlParamStr('firstName', "?" + receivedParamData);
		     var lastName = $.hpciUrlParamStr('lastName', "?" + receivedParamData);
		     var requestRef = $.hpciUrlParamStr('requestRef', "?" + receivedParamData);
		     
		     // encrypt if required
		     var enteredCCNumValue = ccNumInput.value;
			 var encryptKeyName = "";
			 var encryptEnabled = "N";
		     if (enableClientEnc) {
		       var paddedCCNum = randomPrefix + "-" + enteredCCNumValue + "-" + randomSuffix;
		       var encryptedCC = encryptService.encrypt(paddedCCNum);
		       enteredCCNumValue = encryptedCC;
		       encryptKeyName = encKeyName;
		       encryptEnabled = "Y";
		       		       
		     }
		     
		     $.post("https://cc.hostedpci.com/iSynSApp/appUserMapCC!createMapedCC.action", { captchaId: captchaIdValue, captchaResp: captchaRespValue, ccNum: enteredCCNumValue, ccCVV: ccCVVInput.value, sid: "529081", cvvValidate: "", enableTokenDisplay: "", ccNumTokenIdx: "1", ccNumToken: "", ccCVVToken: "", firstName: firstName, lastName: lastName, expYear: expYear, expMonth: expMonth, requestRef: requestRef, encryptEnabled: encryptEnabled, encryptKeyName: encryptKeyName },
		       function(data){
		       
		        hpciStatus = $.hpciUrlParam('hpciStatus', "?" + data);
		        captchaIdValue = $.hpciUrlParam('nextCaptchaId', "?" + data);
		        captchaRespValue = $.hpciUrlParam('nextCaptchaResp', "?" + data);
		       
			     		       
				$.postMessage(
				  data,
				  preparedPostMsgUrl,
				  parent
				);	     
								
		       }
		     );
		 }
	     
	     	     
	  },
	  'https://www.ssense.com'
	);
    
        
      </script>
  
  <style type="text/css">html,
body {
  font-size: 11.5px;
  padding: 0;
  margin: 0;
  width: 100%;
  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
}
.row-fluid {
  position: relative;
  margin-left: -12px;
}
.row-fluid > .span {
  display: block;
  box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -o-box-sizing: border-box;
  float: left;
  min-height: 1px;
  padding-left: 12px;
}
input {
  appearance: none;
  -webkit-appearance: none;
  -ms-appearance: none;
  -moz-appearance: none;
  -o-appearance: none;
  box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -o-box-sizing: border-box;
  border-radius: 0;
  -webkit-border-radius: 0;
  -ms-border-radius: 0;
  -moz-border-radius: 0;
  -o-border-radius: 0;
  background-clip: border-box;
  vertical-align: top;
  width: 100%;
  padding: 0 6px;
  height: 30.0px;
  border: 1px solid #777777;
  outline: none;
}
input {
  line-height: 27px\9;
}
#ccNum-cont {
  width: 70%;
  *width: 200px;
}
#ccCVV-cont {
  width: 30%;
  *width: 50px;
}
#ccCVV-cont input {
  *margin-left: 12px;
}

</style>
  
 </head>

 <body id="updatecc">

<div class="row-fluid">
  <div class="span" id="ccNum-cont">
    <input id="ccNum" name="ccNum" />
  </div>
  <div class="span" id="ccCVV-cont">
    <input id="ccCVV" name="ccCVV" />
  </div>
</div>


</body>
 
</html>
